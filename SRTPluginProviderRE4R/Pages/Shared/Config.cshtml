@using SRTPluginProducerRE4R.Pages.Shared;
@model SRTPluginProducerRE4R.PluginConfiguration
@{
	ViewData["Title"] = "DXOverlay Settings";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@(
await Html.RenderComponentAsync<Config>(RenderMode.ServerPrerendered, new { Model = Model })
)

<h1 class="pl-4 pt-4 text-2xl font-bold text-indigo-400">Resident Evil 4 Remake DirectX Overlay Settings</h1>

<form id="configurationForm" class="w-full flex flex-col gap-2 p-4" method="post" asp-page-handler="SaveConfiguration">
	<div class="w-full h-auto bg-slate-800 flex flex-col gap-2 p-4 rounded-md justify-center">
		<h1 class="w-full text-center text-lg font-bold border-b pb-2 text-indigo-300">Debug Settings</h1>
		<div class="w-full grid md:grid-cols-3 sm:grid-cols-2 grid-cols-1">
			<label>
				<input type="checkbox" name="Debug" asp-for="Debug" value="true" @(Model.Debug ? "checked" : null) /> Show Debug Timer Info
			</label>

			<label>
				<input type="checkbox" name="ShowDuffle" asp-for="ShowDuffle" value="true" @(Model.ShowDuffle ? "checked" : null) /> Show Duffle
			</label>

			<label>
				<input type="checkbox" name="ShowDifficultyAdjustment" asp-for="ShowDifficultyAdjustment" value="true" @(Model.ShowDifficultyAdjustment ? "checked" : null) /> Show DA (Difficulty Adjustment)
			</label>

			<label>
				<input type="checkbox" name="ShowPTAS" asp-for="ShowPTAS" value="true" @(Model.ShowPTAS ? "checked" : null) /> Show PTAS
			</label>

			<label>
				<input type="checkbox" name="ShowPosition" asp-for="ShowPosition" value="true" @(Model.ShowPosition ? "checked" : null) /> Show Position
			</label>

			<label>
				<input type="checkbox" name="ShowRotation" asp-for="ShowRotation" value="true" @(Model.ShowRotation ? "checked" : null) /> Show Rotation
			</label>
		</div>
	</div>

	<div class="w-full h-auto bg-slate-800 grid grid-cols-4 gap-2 p-4 rounded-md">
		<h1 class="col-span-4 text-center text-lg font-bold border-b pb-2 text-indigo-300">Font Settings</h1>

		<label class="col-span-1 flex flex-col">
			Font Size
			<input class="text-black p-2 rounded-md" type="number" name="FontSize" asp-for="FontSize" value="@Model.FontSize" />
		</label>

		<label class="col-span-3 flex flex-col">
			Font Name
			<select class="text-black p-2 rounded-md" name="StringFontName" asp-for="StringFontName">
				<option value="Arial" selected="@Model.StringFontName == " Arial"">Arial Black</option>
				<option value="Bahnschrift" selected="@Model.StringFontName == " Bahnschrift"">Bahnschrift</option>
				<option value="Comic Sans MS" selected="@Model.StringFontName == " Comic Sans MS"">Comic Sans MS</option>
				<option value="Courier New" selected="@Model.StringFontName == " Courier New"">Consolas</option>
				<option value="Courier New" selected="@Model.StringFontName == " Courier New"">Courier New</option>
				<option value="Impact" selected="@Model.StringFontName == " Impact"">Impact</option>
				<option value="Times New Roman" selected="@Model.StringFontName == " Times New Roman"">Times New Roman</option>
			</select>
		</label>

	</div>

	<div class="w-full h-auto bg-slate-800 grid grid-cols-2 gap-2 p-4 rounded-md">
		<h1 class="col-span-2 text-center text-lg font-bold border-b pb-2 text-indigo-300">Scale and Position Offset Settings</h1>

		<label class="flex flex-col">
			UI Size Scale Multiplier
			<input class="text-black p-2 rounded-md" type="number" name="ScalingFactor" asp-for="ScalingFactor" value="@Model.ScalingFactor" />
		</label>

		<label class="flex flex-col">
			Enemy Render Limit
			<input class="text-black p-2 rounded-md" type="number" name="EnemyLimit" asp-for="EnemyLimit" value="@Model.EnemyLimit" />
		</label>

		<label class="flex flex-col">
			Position X (All)
			<input class="text-black p-2 rounded-md" type="number" name="PositionX" asp-for="PositionX" value="@Model.PositionX" />
		</label>

		<label class="flex flex-col">
			Position Y (All)
			<input class="text-black p-2 rounded-md" type="number" name="PositionY" asp-for="PositionY" value="@Model.PositionY" />
		</label>

		<label class="flex flex-col">
			Enemy HP Position X
			<input class="text-black p-2 rounded-md" type="number" name="EnemyHPPositionX" asp-for="EnemyHPPositionX" value="@Model.EnemyHPPositionX" />
		</label>

		<label class="flex flex-col">
			Enemy HP Position Y
			<input class="text-black p-2 rounded-md" type="number" name="EnemyHPPositionY" asp-for="EnemyHPPositionY" value="@Model.EnemyHPPositionY" />
		</label>

	</div>

	<div class="w-full h-auto bg-slate-800  grid md:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-2 p-4 rounded-md">
		<h1 class="md:col-span-3 sm:col-span-2 col-span-1 text-center text-lg font-bold border-b pb-2 text-indigo-300">HP Bar Settings</h1>

		<label>
			<input type="checkbox" name="ShowHPBars" asp-for="ShowHPBars" value="true" @(Model.ShowHPBars ? "checked" : null) /> Show HP Bars
		</label>

		<label>
			<input type="checkbox" name="ShowDamagedEnemiesOnly" asp-for="ShowDamagedEnemiesOnly" value="true" @(Model.ShowDamagedEnemiesOnly ? "checked" : null) /> Show Damaged Enemies Only
		</label>

		<label>
			<input type="checkbox" name="ShowBossOnly" asp-for="ShowBossOnly" value="true" @(Model.ShowBossOnly ? "checked" : null) /> Show Boss Only
		</label>

		<label>
			<input type="checkbox" name="CenterPlayerHP" asp-for="CenterPlayerHP" value="true" @(Model.CenterPlayerHP ? "checked" : null) /> Center Player HP
		</label>

		<label>
			<input type="checkbox" name="CenterBossHP" asp-for="CenterBossHP" value="true" @(Model.CenterBossHP ? "checked" : null) /> Center Boss HP
		</label>
	</div>

	<button class="w-full bg-green-800 hover:bg-green-700 p-4 rounded-md" type="submit">Save Configuration</button>
</form>

<script>
	// Select all checkboxes inside the form
	const checkboxes = document.querySelectorAll('#configurationForm input[type="checkbox"]');

	// Attach an event listener to each checkbox
	checkboxes.forEach(checkbox => {
		checkbox.addEventListener('change', function () {
			// Find the corresponding input field by name and update its value
			document.querySelector(`#configurationForm [name="${this.name}"]`).value = this.checked;
		});
	});
</script>